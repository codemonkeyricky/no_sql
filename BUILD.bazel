# cc_binary(
#     name = "server", 
#     srcs = [
#         "node.hh",
#         "directory.hh",
#         "server.cc",
#     ], 
#     copts = [
#         "-std=c++20",
#     ],
# )

# cc_test(
#     name = "db", 
#     srcs = [
#         "main.cc",
#         "node.hh",
#         "directory.hh",
#     ], 
#     copts = [
#         "-std=c++20",
#     ],
# )

cc_test(
    name = "replica_ut", 
    srcs = [
        "node/test/replica.cc",
        "node/replica.hh",
        "node/replica_follower.cc",
        "node/replica_candidate.cc",
        "node/replica_leader.cc",
        "node/replica.cc",
    ],
    copts = [
        "-std=c++20",
    ],
    linkopts = [
        "-lboost_serialization",
        "-lboost_cobalt",
        "-L/usr/local/lib",
    ],
)

cc_test(
    name = "file_ut", 
    srcs = [
        "file_ut.cc",
        "file.hh",
    ], 
    copts = [
        "-std=c++20",
    ],
    linkopts = [
        "-lboost_serialization",
        "-lboost_cobalt",
        "-L/usr/local/lib",
    ],
    env = {
        "LD_LIBRARY_PATH": "/usr/local/lib",
    },
)

cc_test(
    name = "replica", 
    srcs = [
        "ut_replica.cc",
        "compile_ut.hh",
        "node/node.hh",
        "node/node.cc",
        "node/node_rx.cc",
        "node/replica_follower.cc",
        "node/replica_leader.cc",
        "node/replica.cc",
        "directory.hh",
        "cluster.hh"
    ], 
    copts = [
        "-std=c++20",
    ],
    linkopts = [
        "-lboost_serialization",
        "-lboost_cobalt",
        "-L/usr/local/lib",
    ],
    env = {
        "LD_LIBRARY_PATH": "/usr/local/lib",
    },
)

cc_test(
    name = "remote", 
    srcs = [
        "ut.cc",
        "compile_ut.hh",
        "node/node.hh",
        "node/sstable.hh",
        "node/log.hh",
        "node/bloom.hh",
        "node/node.cc",
        "node/memtable.hh",
        "node/partition.hh",
        "node/node_rx.cc",
        "directory.hh",
        "cluster.hh"
    ], 
    copts = [
        "-std=c++20",
    ],
    linkopts = [
        "-lboost_serialization",
        "-lboost_cobalt",
        "-L/usr/local/lib",
    ],
    env = {
        "LD_LIBRARY_PATH": "/usr/local/lib",
    },
)

cc_binary(
    name = "fuse", 
    srcs = [
        "fuse.c",
    ], 
    copts = [
        "-D_FILE_OFFSET_BITS=64",
    ],
    linkopts = [
        "-lfuse",
    ],
)

# cc_binary(
#     name = "echo", 
#     srcs = [
#         "echo_server.cc",
#     ], 
#     copts = [
#         "-std=c++20",
#     ],
#     linkopts = [
#         # "-lfuse",
#     ],
# )
